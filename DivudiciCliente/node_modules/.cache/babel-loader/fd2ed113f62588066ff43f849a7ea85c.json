{"ast":null,"code":"import { BASE_PATH, apiVersion } from \"../config\";\nimport jwtDecode from 'jwt-decode';\nexport function agregarUsuariosApi(data) {\n  const url = `${BASE_PATH}/${apiVersion}/agregar-Usuario`;\n  const params = {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  }).catch(err => {\n    return err;\n  });\n}\nexport function getUsersApi() {\n  const url = `${BASE_PATH}/${apiVersion}/users`;\n  const params = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    mode: \"cors\"\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  }).catch(err => {\n    return err;\n  });\n} //hace inicio de sesion\n\nexport function signInApi(data) {\n  const url = `${BASE_PATH}/${apiVersion}/sign-in`;\n  const params = {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  }).catch(error => {\n    return error.message;\n  });\n}\nexport function updateUserApi(user, userId) {\n  const url = `${BASE_PATH}/${apiVersion}/updateUser/${userId}`;\n  const params = {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  }).catch(err => {\n    return err;\n  });\n}\nexport function deleteBusetaApi(id) {\n  const url = `${BASE_PATH}/${apiVersion}/deleteUser/${id}`;\n  const params = {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  }).catch(err => {\n    return err;\n  });\n}","map":{"version":3,"sources":["C:/Users/Julian/Desktop/web acttual/demor/src/Api/Seguridad/usuarios.js"],"names":["BASE_PATH","apiVersion","jwtDecode","agregarUsuariosApi","data","url","params","method","body","JSON","stringify","headers","fetch","then","response","json","result","catch","err","getUsersApi","mode","signInApi","error","message","updateUserApi","user","userId","deleteBusetaApi","id"],"mappings":"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","sourcesContent":["import { BASE_PATH, apiVersion } from \"../config\";\r\nimport jwtDecode from 'jwt-decode'\r\n\r\nexport function agregarUsuariosApi(data) {\r\n\r\n    const url = `${BASE_PATH}/${apiVersion}/agregar-Usuario`;\r\n    const params = {\r\n\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    return fetch(url, params).then(response => {\r\n        return response.json()\r\n    }).then(result => {\r\n        return result;\r\n    }).catch(err => {\r\n        return err;\r\n    })\r\n}\r\n\r\n\r\nexport function getUsersApi() {\r\n    const url = `${BASE_PATH}/${apiVersion}/users`;\r\n\r\n    const params = {\r\n\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        mode: \"cors\"\r\n    };\r\n\r\n    return fetch(url, params).then(response => {\r\n        return response.json()\r\n    }).then(result => {\r\n        return result;\r\n    }).catch(err => {\r\n        return err;\r\n    })\r\n}\r\n//hace inicio de sesion\r\nexport function signInApi(data) {\r\n    const url = `${BASE_PATH}/${apiVersion}/sign-in`;\r\n    const params = {\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    };\r\n    return fetch(url, params).then(response => {\r\n        return response.json();\r\n    }).then(result => {\r\n        return result;\r\n    }).catch(error => {\r\n        return error.message;\r\n    })\r\n\r\n}\r\nexport function updateUserApi(user, userId) {\r\n    const url = `${BASE_PATH}/${apiVersion}/updateUser/${userId}`;\r\n\r\n    const params = {\r\n        method: \"PUT\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(user)\r\n    }\r\n\r\n    return fetch(url, params).then(response => {\r\n        return response.json();\r\n    }).then(result => {\r\n        return result;\r\n    }).catch(err => {\r\n        return err;\r\n    })\r\n}\r\n\r\nexport function deleteBusetaApi(id) {\r\n    const url = `${BASE_PATH}/${apiVersion}/deleteUser/${id}`;\r\n\r\n    const params = {\r\n        method: \"DELETE\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    return fetch(url, params).then(response => {\r\n        return response.json();\r\n    }).then(result => {\r\n        return result;\r\n    }).catch(err => {\r\n        return err;\r\n    })\r\n\r\n}"]},"metadata":{},"sourceType":"module"}