{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/Documents/Proyecto-Web-Completo/DivudiciCliente/src/Components/Roles/EditRolForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Button, Row, Col, Form, Input, notification, Select } from \"antd\";\nimport { updateRolApi } from \"../../Api/Seguridad/roles\";\nimport { UserOutlined, AlignLeftOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditRolForm(props) {\n  _s();\n\n  const {\n    roles,\n    setIsVisibleModal,\n    setReloadRol\n  } = props;\n  const [rolesData, setRolesData] = useState({\n    nombre: roles.nombre,\n    descripcion: roles.descripcion\n  });\n\n  const updateRoles = e => {\n    e.preventDefault();\n    let rolesUpdate = rolesData;\n\n    if (!rolesUpdate.nombre || !rolesUpdate.descripcion) {\n      openNotification('bottomRight', \"Por favor rellene todos los espacios\", \"error\");\n      return;\n    }\n\n    updateRolApi(rolesUpdate, roles._id).then(result => {\n      openNotification('bottomRight', result.message, \"success\");\n      setIsVisibleModal(false);\n      setReloadRol(true);\n    });\n  };\n\n  const openNotification = (placement, message, type) => {\n    notification[type]({\n      message: message,\n      placement\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Formulario de Edici\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EditForm, {\n      rolData: rolesData,\n      setRolData: setRolesData,\n      updateRol: updateRoles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditRolForm, \"m5vlKyUardBJumTtIG7biooRSNo=\");\n\n_c = EditRolForm;\n\nfunction EditForm(props) {\n  const {\n    rolData,\n    setRolData,\n    updateRol\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"form-edit\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      gutter: 24,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 37\n            }, this),\n            placeholder: \"Nombre\",\n            onChange: e => setRolData({ ...rolData,\n              nombre: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            prefix: /*#__PURE__*/_jsxDEV(AlignLeftOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 37\n            }, this),\n            placeholder: \"Descripci\\xF3n\",\n            onChange: e => setRolData({ ...rolData,\n              descripcion: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"btn-submit\",\n        onClick: updateRol,\n        children: \"Actualizar Rol\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = EditForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditRolForm\");\n$RefreshReg$(_c2, \"EditForm\");","map":{"version":3,"sources":["/Users/kenneth/Documents/Proyecto-Web-Completo/DivudiciCliente/src/Components/Roles/EditRolForm.js"],"names":["React","useState","useEffect","useRef","Button","Row","Col","Form","Input","notification","Select","updateRolApi","UserOutlined","AlignLeftOutlined","EditRolForm","props","roles","setIsVisibleModal","setReloadRol","rolesData","setRolesData","nombre","descripcion","updateRoles","e","preventDefault","rolesUpdate","openNotification","_id","then","result","message","placement","type","EditForm","rolData","setRolData","updateRol","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Button, Row, Col, Form, Input, notification, Select } from \"antd\";\nimport { updateRolApi } from \"../../Api/Seguridad/roles\";\nimport { UserOutlined, AlignLeftOutlined } from '@ant-design/icons';\n\n\nexport default function EditRolForm(props) {\n    const { roles, setIsVisibleModal, setReloadRol } = props;\n    const [rolesData, setRolesData] = useState({\n        nombre: roles.nombre,\n        descripcion: roles.descripcion,\n    })\n\n    const updateRoles = e => {\n        e.preventDefault();\n        let rolesUpdate = rolesData;\n\n        if (!rolesUpdate.nombre || !rolesUpdate.descripcion) {\n            openNotification('bottomRight', \"Por favor rellene todos los espacios\", \"error\")\n\n\n            return;\n        }\n\n        updateRolApi(rolesUpdate, roles._id).then(result => {\n            openNotification('bottomRight', result.message, \"success\")\n            setIsVisibleModal(false)\n            setReloadRol(true);\n        });\n\n\n\n    }\n\n    const openNotification = (placement, message, type) => {\n        notification[type]({\n            message: message,\n            placement,\n        });\n    };\n\n    return (\n        <div>\n            <h1>Formulario de Edici√≥n</h1>\n            <EditForm\n                rolData={rolesData}\n                setRolData={setRolesData}\n                updateRol={updateRoles}\n            />\n        </div>\n    )\n}\n\n\n\n\nfunction EditForm(props) {\n    const { rolData, setRolData, updateRol } = props;\n\n    return (\n        <Form className=\"form-edit\">\n            <Row gutter={24}>\n                <Col span={12}>\n                    <Form.Item>\n                        <Input\n                            prefix={<UserOutlined />}\n                            placeholder=\"Nombre\"\n                            onChange={e => setRolData({ ...rolData, nombre: e.target.value })}\n\n                        />\n                    </Form.Item>\n                </Col>\n                <Col span={12}>\n                    <Form.Item>\n                        <Input\n                            prefix={<AlignLeftOutlined />}\n                            placeholder=\"Descripci√≥n\"\n                            onChange={e => setRolData({ ...rolData, descripcion: e.target.value })}\n                        />\n                    </Form.Item>\n                </Col>\n            </Row>\n\n\n\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"btn-submit\" onClick={updateRol}>\n                    Actualizar Rol\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}"]},"metadata":{},"sourceType":"module"}