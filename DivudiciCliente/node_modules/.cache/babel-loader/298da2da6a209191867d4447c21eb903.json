{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Julian\\\\Desktop\\\\Test React\\\\PRUEBA\\\\demor\\\\src\\\\Components\\\\Users\\\\ListUsers\\\\ListUsers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Table, Input, Button, Space } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ListUsers(props) {\n  _s();\n\n  const {\n    usersActive\n  } = props;\n  const [viewUsers, setViewUsers] = useState(true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"List-users\",\n    children: viewUsers ? /*#__PURE__*/_jsxDEV(UsersActive, {\n      usersActive: usersActive\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 26\n    }, this) : /*#__PURE__*/_jsxDEV(UsersActive, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 70\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ListUsers, \"0uA5HAWkdK4VQMjlVzwbdWr/Izw=\");\n\n_c = ListUsers;\n\nfunction UsersActive(props) {\n  const {\n    usersActive\n  } = props; // console.log(props.usersActive);\n  // console.log(this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UserListTable, {\n      userData: usersActive\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = UsersActive;\n\nclass UserListTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchText: '',\n      searchedColumn: ''\n    };\n\n    this.getColumnSearchProps = dataIndex => ({\n      filterDropdown: ({\n        setSelectedKeys,\n        selectedKeys,\n        confirm,\n        clearFilters\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          ref: node => {\n            this.searchInput = node;\n          },\n          placeholder: `Search ${dataIndex}`,\n          value: selectedKeys[0],\n          onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n          onPressEnter: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n          style: {\n            width: 188,\n            marginBottom: 8,\n            display: 'block'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Space, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n            icon: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 31\n            }, this),\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => this.handleReset(clearFilters),\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"link\",\n            size: \"small\",\n            onClick: () => {\n              confirm({\n                closeDropdown: false\n              });\n              this.setState({\n                searchText: selectedKeys[0],\n                searchedColumn: dataIndex\n              });\n            },\n            children: \"Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this),\n      filterIcon: filtered => /*#__PURE__*/_jsxDEV(SearchOutlined, {\n        style: {\n          color: filtered ? '#1890ff' : undefined\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 33\n      }, this),\n      onFilter: (value, record) => record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : '',\n      onFilterDropdownVisibleChange: visible => {\n        if (visible) {\n          setTimeout(() => this.searchInput.select(), 100);\n        }\n      },\n      render: text => this.state.searchedColumn === dataIndex ? /*#__PURE__*/_jsxDEV(Highlighter, {\n        highlightStyle: {\n          backgroundColor: '#ffc069',\n          padding: 0\n        },\n        searchWords: [this.state.searchText],\n        autoEscape: true,\n        textToHighlight: text ? text.toString() : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this) : text\n    });\n\n    this.handleSearch = (selectedKeys, confirm, dataIndex) => {\n      confirm();\n      this.setState({\n        searchText: selectedKeys[0],\n        searchedColumn: dataIndex\n      });\n    };\n\n    this.handleReset = clearFilters => {\n      clearFilters();\n      this.setState({\n        searchText: ''\n      });\n    };\n  }\n\n  render() {\n    const columns = [{\n      title: 'Codigo',\n      dataIndex: 'codigo',\n      key: 'codigo',\n      width: '30%',\n      ...this.getColumnSearchProps('codigo')\n    }, {\n      title: 'Nombre',\n      dataIndex: 'nombre',\n      key: 'nombre',\n      width: '20%',\n      ...this.getColumnSearchProps('nombre')\n    }, {\n      title: 'Primer Apelldio',\n      dataIndex: 'primerApellido',\n      key: 'primerApellido',\n      width: '20%',\n      ...this.getColumnSearchProps('primerApellido')\n    }, {\n      title: 'Segundo Apellido',\n      dataIndex: 'segundoApellido',\n      key: 'segundoApellido',\n      width: '20%',\n      ...this.getColumnSearchProps('segundoApellido')\n    }, {\n      title: 'Telefono',\n      dataIndex: 'telefono',\n      key: 'telefono',\n      width: '20%',\n      ...this.getColumnSearchProps('telefono')\n    }, {\n      title: 'Celular',\n      dataIndex: 'celular',\n      key: 'celular',\n      width: '20%',\n      ...this.getColumnSearchProps('celular')\n    }];\n    return /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: this.props.userData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ListUsers\");\n$RefreshReg$(_c2, \"UsersActive\");","map":{"version":3,"sources":["C:/Users/Julian/Desktop/Test React/PRUEBA/demor/src/Components/Users/ListUsers/ListUsers.js"],"names":["React","useState","Table","Input","Button","Space","Highlighter","SearchOutlined","ReactDOM","ListUsers","props","usersActive","viewUsers","setViewUsers","UsersActive","UserListTable","Component","state","searchText","searchedColumn","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","searchInput","e","target","value","handleSearch","width","marginBottom","display","handleReset","closeDropdown","setState","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","backgroundColor","columns","title","key","userData"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Table, Input, Button, Space } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\n\r\nexport default function ListUsers(props) {\r\n    const { usersActive } = props\r\n    const [viewUsers, setViewUsers] = useState(true);\r\n\r\n    return (\r\n        <div className=\"List-users\">\r\n\r\n            {viewUsers ? <UsersActive usersActive={usersActive} /> : <UsersActive />}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction UsersActive(props) {\r\n    const { usersActive } = props;\r\n    // console.log(props.usersActive);\r\n    // console.log(this);\r\n    return (\r\n        <div>\r\n            <br />\r\n            <UserListTable userData={usersActive} />\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nclass UserListTable extends React.Component {\r\n    state = {\r\n        searchText: '',\r\n        searchedColumn: ''\r\n    };\r\n\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n            <div style={{ padding: 8 }}>\r\n                <Input\r\n                    ref={node => {\r\n                        this.searchInput = node;\r\n                    }}\r\n                    placeholder={`Search ${dataIndex}`}\r\n                    value={selectedKeys[0]}\r\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                    onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n                    style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n                />\r\n                <Space>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n                        icon={<SearchOutlined />}\r\n                        size=\"small\"\r\n                        style={{ width: 90 }}\r\n                    >\r\n                        Search\r\n          </Button>\r\n                    <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n                        Reset\r\n          </Button>\r\n                    <Button\r\n                        type=\"link\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            confirm({ closeDropdown: false });\r\n                            this.setState({\r\n                                searchText: selectedKeys[0],\r\n                                searchedColumn: dataIndex,\r\n                            });\r\n                        }}\r\n                    >\r\n                        Filter\r\n          </Button>\r\n                </Space>\r\n            </div>\r\n        ),\r\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n        onFilter: (value, record) =>\r\n            record[dataIndex]\r\n                ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n                : '',\r\n        onFilterDropdownVisibleChange: visible => {\r\n            if (visible) {\r\n                setTimeout(() => this.searchInput.select(), 100);\r\n            }\r\n        },\r\n        render: text =>\r\n            this.state.searchedColumn === dataIndex ? (\r\n                <Highlighter\r\n                    highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n                    searchWords={[this.state.searchText]}\r\n                    autoEscape\r\n                    textToHighlight={text ? text.toString() : ''}\r\n                />\r\n            ) : (\r\n                text\r\n            ),\r\n    });\r\n\r\n    handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n        confirm();\r\n        this.setState({\r\n            searchText: selectedKeys[0],\r\n            searchedColumn: dataIndex,\r\n        });\r\n    };\r\n\r\n    handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.setState({ searchText: '' });\r\n    };\r\n\r\n    render() {\r\n        const columns = [\r\n            {\r\n                title: 'Codigo',\r\n                dataIndex: 'codigo',\r\n                key: 'codigo',\r\n                width: '30%',\r\n                ...this.getColumnSearchProps('codigo'),\r\n            },\r\n            {\r\n                title: 'Nombre',\r\n                dataIndex: 'nombre',\r\n                key: 'nombre',\r\n                width: '20%',\r\n                ...this.getColumnSearchProps('nombre'),\r\n            },\r\n            {\r\n                title: 'Primer Apelldio',\r\n                dataIndex: 'primerApellido',\r\n                key: 'primerApellido',\r\n                width: '20%',\r\n                ...this.getColumnSearchProps('primerApellido'),\r\n            },\r\n            {\r\n                title: 'Segundo Apellido',\r\n                dataIndex: 'segundoApellido',\r\n                key: 'segundoApellido',\r\n                width: '20%',\r\n                ...this.getColumnSearchProps('segundoApellido'),\r\n            },\r\n            {\r\n                title: 'Telefono',\r\n                dataIndex: 'telefono',\r\n                key: 'telefono',\r\n                width: '20%',\r\n                ...this.getColumnSearchProps('telefono'),\r\n            },\r\n            {\r\n                title: 'Celular',\r\n                dataIndex: 'celular',\r\n                key: 'celular',\r\n                width: '20%',\r\n                ...this.getColumnSearchProps('celular'),\r\n            }\r\n\r\n        ];\r\n        return <Table columns={columns} dataSource={this.props.userData} />;\r\n    }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}