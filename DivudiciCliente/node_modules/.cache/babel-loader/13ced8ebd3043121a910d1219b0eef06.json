{"ast":null,"code":"/* eslint-disable no-useless-escape */\nexport function minLengthValidation(inputData, minlength) {\n  const {\n    value\n  } = inputData;\n  removeClassErrorSuccess(inputData);\n\n  if (value.length >= minlength) {\n    inputData.classList.add('success');\n    return true;\n  } else {\n    inputData.classList.add(\"error\");\n    return false;\n  }\n}\nexport function emailValidation(inputData) {\n  const emailValid = /^([a-zA-Z0-9_\\.\\-]+\\@(([a-zA-Z0-9\\-]+([a-zA-Z0-9]{2,4})+$/;\n  const {\n    value\n  } = inputData;\n  removeClassErrorSuccess(inputData);\n  const resultValidation = emailValid.test(value);\n\n  if (resultValidation) {\n    inputData.classList.add(\"success\");\n    return true;\n  } else {\n    inputData.classList.add(\"error\");\n    return false;\n  }\n}\n\nfunction removeClassErrorSuccess(inputData) {\n  inputData.classList.remove(\"success\");\n  inputData.classList.remove(\"error\");\n}","map":{"version":3,"sources":["C:/Users/XPC/Desktop/DemoReact/demor/src/Utils/formValidation.js"],"names":["minLengthValidation","inputData","minlength","value","removeClassErrorSuccess","length","classList","add","emailValidation","emailValid","resultValidation","test","remove"],"mappings":"AAAA;AACA,OAAO,SAASA,mBAAT,CAA6BC,SAA7B,EAAwCC,SAAxC,EAAmD;AAGtD,QAAM;AAAEC,IAAAA;AAAF,MAAYF,SAAlB;AAEAG,EAAAA,uBAAuB,CAACH,SAAD,CAAvB;;AAEA,MAAIE,KAAK,CAACE,MAAN,IAAgBH,SAApB,EAA+B;AAE3BD,IAAAA,SAAS,CAACK,SAAV,CAAoBC,GAApB,CAAwB,SAAxB;AACA,WAAO,IAAP;AACH,GAJD,MAIO;AAEHN,IAAAA,SAAS,CAACK,SAAV,CAAoBC,GAApB,CAAwB,OAAxB;AACA,WAAO,KAAP;AACH;AAEJ;AAED,OAAO,SAASC,eAAT,CAAyBP,SAAzB,EAAoC;AAEvC,QAAMQ,UAAU,GAAG,2DAAnB;AACA,QAAM;AAAEN,IAAAA;AAAF,MAAYF,SAAlB;AAEAG,EAAAA,uBAAuB,CAACH,SAAD,CAAvB;AAGA,QAAMS,gBAAgB,GAAGD,UAAU,CAACE,IAAX,CAAgBR,KAAhB,CAAzB;;AAEA,MAAIO,gBAAJ,EAAsB;AAElBT,IAAAA,SAAS,CAACK,SAAV,CAAoBC,GAApB,CAAwB,SAAxB;AACA,WAAO,IAAP;AACH,GAJD,MAIO;AAEHN,IAAAA,SAAS,CAACK,SAAV,CAAoBC,GAApB,CAAwB,OAAxB;AACA,WAAO,KAAP;AAEH;AAEJ;;AAGD,SAASH,uBAAT,CAAiCH,SAAjC,EAA4C;AAExCA,EAAAA,SAAS,CAACK,SAAV,CAAoBM,MAApB,CAA2B,SAA3B;AACAX,EAAAA,SAAS,CAACK,SAAV,CAAoBM,MAApB,CAA2B,OAA3B;AACH","sourcesContent":["/* eslint-disable no-useless-escape */\r\nexport function minLengthValidation(inputData, minlength) {\r\n\r\n\r\n    const { value } = inputData;\r\n\r\n    removeClassErrorSuccess(inputData);\r\n\r\n    if (value.length >= minlength) {\r\n\r\n        inputData.classList.add('success');\r\n        return true;\r\n    } else {\r\n\r\n        inputData.classList.add(\"error\");\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nexport function emailValidation(inputData) {\r\n\r\n    const emailValid = /^([a-zA-Z0-9_\\.\\-]+\\@(([a-zA-Z0-9\\-]+([a-zA-Z0-9]{2,4})+$/;\r\n    const { value } = inputData;\r\n\r\n    removeClassErrorSuccess(inputData);\r\n\r\n\r\n    const resultValidation = emailValid.test(value);\r\n\r\n    if (resultValidation) {\r\n\r\n        inputData.classList.add(\"success\");\r\n        return true;\r\n    } else {\r\n\r\n        inputData.classList.add(\"error\");\r\n        return false;\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction removeClassErrorSuccess(inputData) {\r\n\r\n    inputData.classList.remove(\"success\");\r\n    inputData.classList.remove(\"error\");\r\n}"]},"metadata":{},"sourceType":"module"}