{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/Documents/Proyecto-Web-Completo/DivudiciCliente/src/Components/Buffets/EditBuffetForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Button, Row, Col, Form, Input, notification, Select } from \"antd\";\nimport { updateBuffetApi } from \"../../Api/buffet\";\nimport { UserOutlined, DollarOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditBuffetForm(props) {\n  _s();\n\n  const {\n    espe,\n    setIsVisibleModal,\n    setReloadBuffet\n  } = props;\n  const [EspeData, setEspeData] = useState({\n    nombre: espe.nombre,\n    tipo: espe.tipo,\n    precio: espe.precio\n  });\n\n  const updateEspe = e => {\n    e.preventDefault();\n    let EspeUpdate = EspeData;\n\n    if (!EspeUpdate.nombre || !EspeUpdate.tipo || !EspeUpdate.precio) {\n      openNotification('bottomRight', \"Por favor rellene todos los espacios\", \"error\");\n      return;\n    }\n\n    updateBuffetApi(EspeUpdate, espe._id).then(result => {\n      openNotification('bottomRight', result.message, \"success\");\n      setIsVisibleModal(false);\n      setReloadBuffet(true);\n    });\n  };\n\n  const openNotification = (placement, message, type) => {\n    notification[type]({\n      message: message,\n      placement\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(EditForm, {\n      BuffetData: EspeData,\n      setBuffetData: setEspeData,\n      updateBuffet: updateEspe\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditBuffetForm, \"LFGu7azxFov6DLMs9cCY12tPyzo=\");\n\n_c = EditBuffetForm;\n\nfunction EditForm(props) {\n  const {\n    BuffetData,\n    setBuffetData,\n    updateBuffet\n  } = props;\n  const {\n    Option\n  } = Select;\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"form-edit\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      gutter: 24,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 37\n            }, this),\n            placeholder: \"Nombre\",\n            onChange: e => setBuffetData({ ...BuffetData,\n              nombre: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            prefix: /*#__PURE__*/_jsxDEV(DollarOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 37\n            }, this),\n            placeholder: \"Precio\",\n            onChange: e => setBuffetData({ ...BuffetData,\n              precio: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      gutter: 24,\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Seleccione un Tipo\",\n            onChange: e => setBuffetData({ ...BuffetData,\n              tipo: e\n            }),\n            children: [/*#__PURE__*/_jsxDEV(Option, {\n              value: \"Marina\",\n              children: \"Marina\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Vegetal\",\n              children: \"Vegetal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Frutas\",\n              children: \"Frutas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Comida Mediterranea\",\n              children: \"Comida Mediterranea\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"btn-submit\",\n        onClick: updateBuffet,\n        children: \"Actualizar Buffet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = EditForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditBuffetForm\");\n$RefreshReg$(_c2, \"EditForm\");","map":{"version":3,"sources":["/Users/kenneth/Documents/Proyecto-Web-Completo/DivudiciCliente/src/Components/Buffets/EditBuffetForm.js"],"names":["React","useState","useEffect","useRef","Button","Row","Col","Form","Input","notification","Select","updateBuffetApi","UserOutlined","DollarOutlined","EditBuffetForm","props","espe","setIsVisibleModal","setReloadBuffet","EspeData","setEspeData","nombre","tipo","precio","updateEspe","e","preventDefault","EspeUpdate","openNotification","_id","then","result","message","placement","type","EditForm","BuffetData","setBuffetData","updateBuffet","Option","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,GAAtB,EAA2BC,IAA3B,EAAiCC,KAAjC,EAAwCC,YAAxC,EAAsDC,MAAtD,QAAoE,MAApE;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,mBAA7C;;AAGA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC1C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,iBAAR;AAA2BC,IAAAA;AAA3B,MAA+CH,KAArD;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC;AACrCoB,IAAAA,MAAM,EAAEL,IAAI,CAACK,MADwB;AAErCC,IAAAA,IAAI,EAAEN,IAAI,CAACM,IAF0B;AAGrCC,IAAAA,MAAM,EAAEP,IAAI,CAACO;AAHwB,GAAD,CAAxC;;AAOA,QAAMC,UAAU,GAAGC,CAAC,IAAI;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,UAAU,GAAGR,QAAjB;;AAEA,QAAI,CAACQ,UAAU,CAACN,MAAZ,IAAsB,CAACM,UAAU,CAACL,IAAlC,IAA0C,CAACK,UAAU,CAACJ,MAA1D,EAAkE;AAC9DK,MAAAA,gBAAgB,CAAC,aAAD,EAAgB,sCAAhB,EAAwD,OAAxD,CAAhB;AAGA;AACH;;AAEDjB,IAAAA,eAAe,CAACgB,UAAD,EAAaX,IAAI,CAACa,GAAlB,CAAf,CAAsCC,IAAtC,CAA2CC,MAAM,IAAI;AACjDH,MAAAA,gBAAgB,CAAC,aAAD,EAAgBG,MAAM,CAACC,OAAvB,EAAgC,SAAhC,CAAhB;AACAf,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAC,MAAAA,eAAe,CAAC,IAAD,CAAf;AACH,KAJD;AAQH,GAnBD;;AAqBA,QAAMU,gBAAgB,GAAG,CAACK,SAAD,EAAYD,OAAZ,EAAqBE,IAArB,KAA8B;AACnDzB,IAAAA,YAAY,CAACyB,IAAD,CAAZ,CAAmB;AACfF,MAAAA,OAAO,EAAEA,OADM;AAEfC,MAAAA;AAFe,KAAnB;AAIH,GALD;;AAOA,sBACI;AAAA,2BACI,QAAC,QAAD;AACI,MAAA,UAAU,EAAEd,QADhB;AAEI,MAAA,aAAa,EAAEC,WAFnB;AAGI,MAAA,YAAY,EAAEI;AAHlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GA9CuBV,c;;KAAAA,c;;AAmDxB,SAASqB,QAAT,CAAkBpB,KAAlB,EAAyB;AACrB,QAAM;AAAEqB,IAAAA,UAAF;AAAcC,IAAAA,aAAd;AAA6BC,IAAAA;AAA7B,MAA8CvB,KAApD;AACA,QAAM;AAAEwB,IAAAA;AAAF,MAAa7B,MAAnB;AAEA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA,4BACI,QAAC,GAAD;AAAK,MAAA,MAAM,EAAE,EAAb;AAAA,8BACI,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,EAAX;AAAA,+BACI,QAAC,IAAD,CAAM,IAAN;AAAA,iCACI,QAAC,KAAD;AACI,YAAA,MAAM,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,oBADZ;AAEI,YAAA,WAAW,EAAC,QAFhB;AAGI,YAAA,QAAQ,EAAEe,CAAC,IAAIY,aAAa,CAAC,EAAE,GAAGD,UAAL;AAAiBf,cAAAA,MAAM,EAAEI,CAAC,CAACe,MAAF,CAASC;AAAlC,aAAD;AAHhC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,EAAX;AAAA,+BACI,QAAC,IAAD,CAAM,IAAN;AAAA,iCACI,QAAC,KAAD;AACI,YAAA,MAAM,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,oBADZ;AAEI,YAAA,WAAW,EAAC,QAFhB;AAGI,YAAA,QAAQ,EAAEhB,CAAC,IAAIY,aAAa,CAAC,EAAE,GAAGD,UAAL;AAAiBb,cAAAA,MAAM,EAAEE,CAAC,CAACe,MAAF,CAASC;AAAlC,aAAD;AAHhC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAsBI,QAAC,GAAD;AAAK,MAAA,MAAM,EAAE,EAAb;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,EAAX;AAAA,+BACI,QAAC,IAAD,CAAM,IAAN;AAAA,iCACI,QAAC,MAAD;AACI,YAAA,WAAW,EAAC,oBADhB;AAEI,YAAA,QAAQ,EAAEhB,CAAC,IAAIY,aAAa,CAAC,EAAE,GAAGD,UAAL;AAAiBd,cAAAA,IAAI,EAAEG;AAAvB,aAAD,CAFhC;AAAA,oCAII,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ,eAOI,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAtBJ,eAsCI,QAAC,IAAD,CAAM,IAAN;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,QAAQ,EAAC,QAAhC;AAAyC,QAAA,SAAS,EAAC,YAAnD;AAAgE,QAAA,OAAO,EAAEa,YAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAtCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8CH;;MAlDQH,Q","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Button, Row, Col, Form, Input, notification, Select } from \"antd\";\nimport { updateBuffetApi } from \"../../Api/buffet\";\nimport { UserOutlined, DollarOutlined } from '@ant-design/icons';\n\n\nexport default function EditBuffetForm(props) {\n    const { espe, setIsVisibleModal, setReloadBuffet } = props;\n    const [EspeData, setEspeData] = useState({\n        nombre: espe.nombre,\n        tipo: espe.tipo,\n        precio: espe.precio,\n\n    })\n\n    const updateEspe = e => {\n        e.preventDefault();\n        let EspeUpdate = EspeData;\n\n        if (!EspeUpdate.nombre || !EspeUpdate.tipo || !EspeUpdate.precio) {\n            openNotification('bottomRight', \"Por favor rellene todos los espacios\", \"error\")\n\n\n            return;\n        }\n\n        updateBuffetApi(EspeUpdate, espe._id).then(result => {\n            openNotification('bottomRight', result.message, \"success\")\n            setIsVisibleModal(false)\n            setReloadBuffet(true);\n        });\n\n\n\n    }\n\n    const openNotification = (placement, message, type) => {\n        notification[type]({\n            message: message,\n            placement,\n        });\n    };\n\n    return (\n        <div>\n            <EditForm\n                BuffetData={EspeData}\n                setBuffetData={setEspeData}\n                updateBuffet={updateEspe}\n            />\n        </div>\n    )\n}\n\n\n\n\nfunction EditForm(props) {\n    const { BuffetData, setBuffetData, updateBuffet } = props;\n    const { Option } = Select\n\n    return (\n        <Form className=\"form-edit\">\n            <Row gutter={24}>\n                <Col span={12}>\n                    <Form.Item>\n                        <Input\n                            prefix={<UserOutlined />}\n                            placeholder=\"Nombre\"\n                            onChange={e => setBuffetData({ ...BuffetData, nombre: e.target.value })}\n\n                        />\n                    </Form.Item>\n                </Col>\n                <Col span={12}>\n                    <Form.Item>\n                        <Input\n                            prefix={<DollarOutlined />}\n                            placeholder=\"Precio\"\n                            onChange={e => setBuffetData({ ...BuffetData, precio: e.target.value })}\n                        />\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Row gutter={24}>\n                <Col span={12}>\n                    <Form.Item>\n                        <Select\n                            placeholder=\"Seleccione un Tipo\"\n                            onChange={e => setBuffetData({ ...BuffetData, tipo: e })}\n                        >\n                            <Option value=\"Marina\">Marina</Option>\n                            <Option value=\"Vegetal\">Vegetal</Option>\n                            <Option value=\"Frutas\">Frutas</Option>\n                            <Option value=\"Comida Mediterranea\">Comida Mediterranea</Option>\n                        </Select>\n                    </Form.Item>\n                </Col>\n            </Row>\n\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"btn-submit\" onClick={updateBuffet}>\n                    Actualizar Buffet\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}"]},"metadata":{},"sourceType":"module"}