{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aleme\\\\Desktop\\\\web acttual\\\\demor\\\\src\\\\Components\\\\Tecnologias\\\\EditTecnoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Button, Row, Col, Form, Input, notification, Select } from \"antd\";\nimport { updateTecnoApi } from \"../../Api/Sistema/tecnologia\";\nimport { UserOutlined, NumberOutlined, AlignLeftOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditTecnoForm(props) {\n  _s();\n\n  const {\n    tecno,\n    setIsVisibleModal,\n    setReloadTecno\n  } = props;\n  const [TecnoData, setTecnoData] = useState({\n    nombre: tecno.nombre,\n    cantidad: tecno.cantidad,\n    descripcion: tecno.descripcion\n  });\n\n  const updateTecno = e => {\n    e.preventDefault();\n    let TecnoUpdate = TecnoData;\n\n    if (!TecnoUpdate.nombre || !TecnoUpdate.cantidad || !TecnoUpdate.descripcion) {\n      openNotification('bottomRight', \"Por favor rellene todos los espacios\", \"error\");\n      return;\n    }\n\n    updateTecnoApi(TecnoUpdate, tecno._id).then(result => {\n      openNotification('bottomRight', result.message, \"success\");\n      setIsVisibleModal(false);\n      setReloadTecno(true);\n    });\n  };\n\n  const openNotification = (placement, message, type) => {\n    notification[type]({\n      message: message,\n      placement\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Formulario de Edici\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EditForm, {\n      TecnoData: TecnoData,\n      setTecnoData: setTecnoData,\n      updateTecno: updateTecno\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditTecnoForm, \"ec8Ne/5KdgIwU19nHIlYRminZnI=\");\n\n_c = EditTecnoForm;\n\nfunction EditForm(props) {\n  const {\n    TecnoData,\n    setTecnoData,\n    updateTecno\n  } = props;\n  const {\n    Option\n  } = Select;\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"form-edit\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      gutter: 24,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 37\n            }, this),\n            placeholder: \"Nombre\",\n            onChange: e => setTecnoData({ ...TecnoData,\n              nombre: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            prefix: /*#__PURE__*/_jsxDEV(AlignLeftOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 37\n            }, this),\n            placeholder: \"Descripci\\xF3n\",\n            onChange: e => setTecnoData({ ...TecnoData,\n              descripcion: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      gutter: 24,\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            prefix: /*#__PURE__*/_jsxDEV(NumberOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 37\n            }, this),\n            placeholder: \"Cantidad\",\n            onChange: e => setTecnoData({ ...TecnoData,\n              cantidad: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"btn-submit\",\n        onClick: updateTecno,\n        children: \"Actualizar Tecnolog\\xEDa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = EditForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditTecnoForm\");\n$RefreshReg$(_c2, \"EditForm\");","map":{"version":3,"sources":["C:/Users/aleme/Desktop/web acttual/demor/src/Components/Tecnologias/EditTecnoForm.js"],"names":["React","useState","useEffect","useRef","Button","Row","Col","Form","Input","notification","Select","updateTecnoApi","UserOutlined","NumberOutlined","AlignLeftOutlined","EditTecnoForm","props","tecno","setIsVisibleModal","setReloadTecno","TecnoData","setTecnoData","nombre","cantidad","descripcion","updateTecno","e","preventDefault","TecnoUpdate","openNotification","_id","then","result","message","placement","type","EditForm","Option","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Button, Row, Col, Form, Input, notification, Select } from \"antd\";\r\nimport { updateTecnoApi } from \"../../Api/Sistema/tecnologia\";\r\nimport { UserOutlined, NumberOutlined, AlignLeftOutlined } from '@ant-design/icons';\r\n\r\n\r\nexport default function EditTecnoForm(props) {\r\n    const { tecno, setIsVisibleModal, setReloadTecno } = props;\r\n    const [TecnoData, setTecnoData] = useState({\r\n        nombre: tecno.nombre,\r\n        cantidad: tecno.cantidad,\r\n        descripcion: tecno.descripcion,\r\n    })\r\n\r\n    const updateTecno = e => {\r\n        e.preventDefault();\r\n        let TecnoUpdate = TecnoData;\r\n\r\n        if (!TecnoUpdate.nombre || !TecnoUpdate.cantidad || !TecnoUpdate.descripcion) {\r\n            openNotification('bottomRight', \"Por favor rellene todos los espacios\", \"error\")\r\n\r\n\r\n            return;\r\n        }\r\n\r\n        updateTecnoApi(TecnoUpdate, tecno._id).then(result => {\r\n            openNotification('bottomRight', result.message, \"success\")\r\n            setIsVisibleModal(false)\r\n            setReloadTecno(true);\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    const openNotification = (placement, message, type) => {\r\n        notification[type]({\r\n            message: message,\r\n            placement,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Formulario de Edición</h1>\r\n            <EditForm\r\n                TecnoData={TecnoData}\r\n                setTecnoData={setTecnoData}\r\n                updateTecno={updateTecno}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nfunction EditForm(props) {\r\n    const { TecnoData, setTecnoData, updateTecno } = props;\r\n    const { Option } = Select\r\n\r\n    return (\r\n        <Form className=\"form-edit\">\r\n            <Row gutter={24}>\r\n                <Col span={12}>\r\n                    <Form.Item>\r\n                        <Input\r\n                            prefix={<UserOutlined />}\r\n                            placeholder=\"Nombre\"\r\n                            onChange={e => setTecnoData({ ...TecnoData, nombre: e.target.value })}\r\n\r\n                        />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Form.Item>\r\n                        <Input\r\n                            prefix={<AlignLeftOutlined />}\r\n                            placeholder=\"Descripción\"\r\n                            onChange={e => setTecnoData({ ...TecnoData, descripcion: e.target.value })}\r\n                        />\r\n                    </Form.Item>\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={24}>\r\n                <Col span={12}>\r\n                    <Form.Item>\r\n                        <Input\r\n                            prefix={<NumberOutlined />}\r\n                            placeholder=\"Cantidad\"\r\n                            onChange={e => setTecnoData({ ...TecnoData, cantidad: e.target.value })}\r\n                        />\r\n                    </Form.Item>\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" className=\"btn-submit\" onClick={updateTecno}>\r\n                    Actualizar Tecnología\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}