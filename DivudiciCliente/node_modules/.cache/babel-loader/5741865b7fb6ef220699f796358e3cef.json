{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alejandro\\\\Desktop\\\\web acttual\\\\demor\\\\src\\\\Components\\\\UnidadMedida\\\\EditUMForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Button, Row, Col, Form, Input, notification, Select } from \"antd\";\nimport { updateUMApi } from \"../../Api/Seguridad/unidadM\";\nimport { UserOutlined, AlignLeftOutlined, PercentageOutlined, ColumnHeightOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditUMForm(props) {\n  _s();\n\n  const {\n    UM,\n    setIsVisibleModal,\n    setReloadUM\n  } = props;\n  const [UMData, setUMData] = useState({\n    nombre: UM.nombre,\n    escala: UM.escala,\n    detalle: UM.detalle,\n    simbologia: UM.simbologia,\n    simbolo: UM.simbolo\n  });\n\n  const updateUM = e => {\n    e.preventDefault();\n    let UMUpdate = UMData;\n\n    if (!UMUpdate.nombre || !UMUpdate.escala || !UMUpdate.detalle || !UMUpdate.simbologia || !UMUpdate.simbolo) {\n      openNotification('bottomRight', \"Por favor rellene todos los espacios\", \"error\");\n      return;\n    }\n\n    updateUMApi(UMUpdate, UM._id).then(result => {\n      openNotification('bottomRight', result.message, \"success\");\n      setIsVisibleModal(false);\n      setReloadUM(true);\n    });\n  };\n\n  const openNotification = (placement, message, type) => {\n    notification[type]({\n      message: message,\n      placement\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Formulario de Edici\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EditForm, {\n      UMData: UMData,\n      setUMData: setUMData,\n      updateUM: updateUM\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditUMForm, \"/n9g6xAI0hxuaxdFTwIyHZX5qzU=\");\n\n_c = EditUMForm;\n\nfunction EditForm(props) {\n  const {\n    UMData,\n    setUMData,\n    updateUM\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"form-edit\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      gutter: 24,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 37\n            }, this),\n            placeholder: \"Nombre\",\n            onChange: e => setUMData({ ...UMData,\n              nombre: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            prefix: /*#__PURE__*/_jsxDEV(ColumnHeightOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 37\n            }, this),\n            placeholder: \"Escala\",\n            onChange: e => setUMData({ ...UMData,\n              escala: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      gutter: 24,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            prefix: /*#__PURE__*/_jsxDEV(AlignLeftOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 37\n            }, this),\n            placeholder: \"Detalle\",\n            onChange: e => setUMData({ ...UMData,\n              detalle: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            prefix: /*#__PURE__*/_jsxDEV(AlignLeftOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 37\n            }, this),\n            placeholder: \"Simbolog\\xEDa\",\n            onChange: e => setUMData({ ...UMData,\n              simbologia: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      gutter: 24,\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            prefix: /*#__PURE__*/_jsxDEV(PercentageOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 37\n            }, this),\n            placeholder: \"Simbolo\",\n            onChange: e => setUMData({ ...UMData,\n              simbolo: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"btn-submit\",\n        onClick: updateUM,\n        children: \"Actualizar Unidad de Medida\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = EditForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditUMForm\");\n$RefreshReg$(_c2, \"EditForm\");","map":{"version":3,"sources":["C:/Users/Alejandro/Desktop/web acttual/demor/src/Components/UnidadMedida/EditUMForm.js"],"names":["React","useState","useEffect","useRef","Button","Row","Col","Form","Input","notification","Select","updateUMApi","UserOutlined","AlignLeftOutlined","PercentageOutlined","ColumnHeightOutlined","EditUMForm","props","UM","setIsVisibleModal","setReloadUM","UMData","setUMData","nombre","escala","detalle","simbologia","simbolo","updateUM","e","preventDefault","UMUpdate","openNotification","_id","then","result","message","placement","type","EditForm","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,GAAtB,EAA2BC,IAA3B,EAAiCC,KAAjC,EAAwCC,YAAxC,EAAsDC,MAAtD,QAAoE,MAApE;AACA,SAASC,WAAT,QAA4B,6BAA5B;AACA,SAASC,YAAT,EAAuBC,iBAAvB,EAA0CC,kBAA1C,EAA8DC,oBAA9D,QAA0F,mBAA1F;;AAGA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACtC,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,iBAAN;AAAyBC,IAAAA;AAAzB,MAAyCH,KAA/C;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBrB,QAAQ,CAAC;AACjCsB,IAAAA,MAAM,EAAEL,EAAE,CAACK,MADsB;AAEjCC,IAAAA,MAAM,EAAEN,EAAE,CAACM,MAFsB;AAGjCC,IAAAA,OAAO,EAAEP,EAAE,CAACO,OAHqB;AAIjCC,IAAAA,UAAU,EAAER,EAAE,CAACQ,UAJkB;AAKjCC,IAAAA,OAAO,EAAET,EAAE,CAACS;AALqB,GAAD,CAApC;;AAQA,QAAMC,QAAQ,GAAGC,CAAC,IAAI;AAClBA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,QAAQ,GAAGV,MAAf;;AAEA,QAAI,CAACU,QAAQ,CAACR,MAAV,IAAoB,CAACQ,QAAQ,CAACP,MAA9B,IAAwC,CAACO,QAAQ,CAACN,OAAlD,IAA6D,CAACM,QAAQ,CAACL,UAAvE,IAAqF,CAACK,QAAQ,CAACJ,OAAnG,EAA4G;AACxGK,MAAAA,gBAAgB,CAAC,aAAD,EAAgB,sCAAhB,EAAwD,OAAxD,CAAhB;AAGA;AACH;;AAEDrB,IAAAA,WAAW,CAACoB,QAAD,EAAWb,EAAE,CAACe,GAAd,CAAX,CAA8BC,IAA9B,CAAmCC,MAAM,IAAI;AACzCH,MAAAA,gBAAgB,CAAC,aAAD,EAAgBG,MAAM,CAACC,OAAvB,EAAgC,SAAhC,CAAhB;AACAjB,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAC,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH,KAJD;AAQH,GAnBD;;AAqBA,QAAMY,gBAAgB,GAAG,CAACK,SAAD,EAAYD,OAAZ,EAAqBE,IAArB,KAA8B;AACnD7B,IAAAA,YAAY,CAAC6B,IAAD,CAAZ,CAAmB;AACfF,MAAAA,OAAO,EAAEA,OADM;AAEfC,MAAAA;AAFe,KAAnB;AAIH,GALD;;AAOA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AACI,MAAA,MAAM,EAAEhB,MADZ;AAEI,MAAA,SAAS,EAAEC,SAFf;AAGI,MAAA,QAAQ,EAAEM;AAHd;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAhDuBZ,U;;KAAAA,U;;AAqDxB,SAASuB,QAAT,CAAkBtB,KAAlB,EAAyB;AACrB,QAAM;AAAEI,IAAAA,MAAF;AAAUC,IAAAA,SAAV;AAAqBM,IAAAA;AAArB,MAAkCX,KAAxC;AAEA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA,4BACI,QAAC,GAAD;AAAK,MAAA,MAAM,EAAE,EAAb;AAAA,8BACI,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,EAAX;AAAA,+BACI,QAAC,IAAD,CAAM,IAAN;AAAA,iCACI,QAAC,KAAD;AACI,YAAA,MAAM,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,oBADZ;AAEI,YAAA,WAAW,EAAC,QAFhB;AAGI,YAAA,QAAQ,EAAEY,CAAC,IAAIP,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAaE,cAAAA,MAAM,EAAEM,CAAC,CAACW,MAAF,CAASC;AAA9B,aAAD;AAH5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,EAAX;AAAA,+BACI,QAAC,IAAD,CAAM,IAAN;AAAA,iCACI,QAAC,KAAD;AACI,YAAA,MAAM,eAAE,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,oBADZ;AAEI,YAAA,WAAW,EAAC,QAFhB;AAGI,YAAA,QAAQ,EAAEZ,CAAC,IAAIP,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAaG,cAAAA,MAAM,EAAEK,CAAC,CAACW,MAAF,CAASC;AAA9B,aAAD;AAH5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAsBI,QAAC,GAAD;AAAK,MAAA,MAAM,EAAE,EAAb;AAAA,8BACI,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,EAAX;AAAA,+BACI,QAAC,IAAD,CAAM,IAAN;AAAA,iCACI,QAAC,KAAD;AACI,YAAA,MAAM,eAAE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,oBADZ;AAEI,YAAA,WAAW,EAAC,SAFhB;AAGI,YAAA,QAAQ,EAAEZ,CAAC,IAAIP,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAaI,cAAAA,OAAO,EAAEI,CAAC,CAACW,MAAF,CAASC;AAA/B,aAAD;AAH5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,EAAX;AAAA,+BACI,QAAC,IAAD,CAAM,IAAN;AAAA,iCACI,QAAC,KAAD;AACI,YAAA,MAAM,eAAE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,oBADZ;AAEI,YAAA,WAAW,EAAC,eAFhB;AAGI,YAAA,QAAQ,EAAEZ,CAAC,IAAIP,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAaK,cAAAA,UAAU,EAAEG,CAAC,CAACW,MAAF,CAASC;AAAlC,aAAD;AAH5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBJ,eA2CI,QAAC,GAAD;AAAK,MAAA,MAAM,EAAE,EAAb;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,EAAX;AAAA,+BACI,QAAC,IAAD,CAAM,IAAN;AAAA,iCACI,QAAC,KAAD;AACI,YAAA,MAAM,eAAE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,oBADZ;AAEI,YAAA,WAAW,EAAC,SAFhB;AAGI,YAAA,QAAQ,EAAEZ,CAAC,IAAIP,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAaM,cAAAA,OAAO,EAAEE,CAAC,CAACW,MAAF,CAASC;AAA/B,aAAD;AAH5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YA3CJ,eA0DI,QAAC,IAAD,CAAM,IAAN;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,QAAQ,EAAC,QAAhC;AAAyC,QAAA,SAAS,EAAC,YAAnD;AAAgE,QAAA,OAAO,EAAEb,QAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YA1DJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkEH;;MArEQW,Q","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Button, Row, Col, Form, Input, notification, Select } from \"antd\";\r\nimport { updateUMApi } from \"../../Api/Seguridad/unidadM\";\r\nimport { UserOutlined, AlignLeftOutlined, PercentageOutlined, ColumnHeightOutlined } from '@ant-design/icons';\r\n\r\n\r\nexport default function EditUMForm(props) {\r\n    const { UM, setIsVisibleModal, setReloadUM } = props;\r\n    const [UMData, setUMData] = useState({\r\n        nombre: UM.nombre,\r\n        escala: UM.escala,\r\n        detalle: UM.detalle,\r\n        simbologia: UM.simbologia,\r\n        simbolo: UM.simbolo\r\n    })\r\n\r\n    const updateUM = e => {\r\n        e.preventDefault();\r\n        let UMUpdate = UMData;\r\n\r\n        if (!UMUpdate.nombre || !UMUpdate.escala || !UMUpdate.detalle || !UMUpdate.simbologia || !UMUpdate.simbolo) {\r\n            openNotification('bottomRight', \"Por favor rellene todos los espacios\", \"error\")\r\n\r\n\r\n            return;\r\n        }\r\n\r\n        updateUMApi(UMUpdate, UM._id).then(result => {\r\n            openNotification('bottomRight', result.message, \"success\")\r\n            setIsVisibleModal(false)\r\n            setReloadUM(true);\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    const openNotification = (placement, message, type) => {\r\n        notification[type]({\r\n            message: message,\r\n            placement,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Formulario de Edición</h1>\r\n            <EditForm\r\n                UMData={UMData}\r\n                setUMData={setUMData}\r\n                updateUM={updateUM}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nfunction EditForm(props) {\r\n    const { UMData, setUMData, updateUM } = props;\r\n\r\n    return (\r\n        <Form className=\"form-edit\">\r\n            <Row gutter={24}>\r\n                <Col span={12}>\r\n                    <Form.Item>\r\n                        <Input\r\n                            prefix={<UserOutlined />}\r\n                            placeholder=\"Nombre\"\r\n                            onChange={e => setUMData({ ...UMData, nombre: e.target.value })}\r\n\r\n                        />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Form.Item>\r\n                        <Input\r\n                            prefix={<ColumnHeightOutlined />}\r\n                            placeholder=\"Escala\"\r\n                            onChange={e => setUMData({ ...UMData, escala: e.target.value })}\r\n                        />\r\n                    </Form.Item>\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={24}>\r\n                <Col span={12}>\r\n                    <Form.Item>\r\n                        <Input\r\n                            prefix={<AlignLeftOutlined />}\r\n                            placeholder=\"Detalle\"\r\n                            onChange={e => setUMData({ ...UMData, detalle: e.target.value })}\r\n\r\n                        />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Form.Item>\r\n                        <Input\r\n                            prefix={<AlignLeftOutlined />}\r\n                            placeholder=\"Simbología\"\r\n                            onChange={e => setUMData({ ...UMData, simbologia: e.target.value })}\r\n                        />\r\n                    </Form.Item>\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={24}>\r\n                <Col span={12}>\r\n                    <Form.Item>\r\n                        <Input\r\n                            prefix={<PercentageOutlined />}\r\n                            placeholder=\"Simbolo\"\r\n                            onChange={e => setUMData({ ...UMData, simbolo: e.target.value })}\r\n\r\n                        />\r\n                    </Form.Item>\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" className=\"btn-submit\" onClick={updateUM}>\r\n                    Actualizar Unidad de Medida\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}