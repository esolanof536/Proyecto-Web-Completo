{"ast":null,"code":"import { BASE_PATH, apiVersion } from \"../config\";\nexport function agregarComestibleApi(data) {\n  const url = `${BASE_PATH}/${apiVersion}/agregar-comestible`;\n  const params = {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  console.log(data);\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  }).catch(err => {\n    return err;\n  });\n}\nexport function getComestibleApi() {\n  const url = `${BASE_PATH}/${apiVersion}/comestibles`;\n  const params = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    mode: \"cors\"\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  }).catch(err => {\n    return err;\n  });\n}\nexport function updateComesApi(user, userId) {\n  const url = `${BASE_PATH}/${apiVersion}/updateComestible/${userId}`;\n  const params = {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  }).catch(err => {\n    return err;\n  });\n}\nexport function deleteComesaApi(id) {\n  const url = `${BASE_PATH}/${apiVersion}/deleteComestible/${id}`;\n  const params = {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  }).catch(err => {\n    return err;\n  });\n}","map":{"version":3,"sources":["/Users/kenneth/Documents/Proyecto-Web-Completo/DivudiciCliente/src/Api/Sistema/comestibles.js"],"names":["BASE_PATH","apiVersion","agregarComestibleApi","data","url","params","method","body","JSON","stringify","headers","console","log","fetch","then","response","json","result","catch","err","getComestibleApi","mode","updateComesApi","user","userId","deleteComesaApi","id"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,UAApB,QAAsC,WAAtC;AAEA,OAAO,SAASC,oBAAT,CAA8BC,IAA9B,EAAoC;AAEvC,QAAMC,GAAG,GAAI,GAAEJ,SAAU,IAAGC,UAAW,qBAAvC;AACA,QAAMI,MAAM,GAAG;AAEXC,IAAAA,MAAM,EAAE,MAFG;AAGXC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAHK;AAIXO,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AAJE,GAAf;AAUAC,EAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AAEA,SAAOU,KAAK,CAACT,GAAD,EAAMC,MAAN,CAAL,CAAmBS,IAAnB,CAAwBC,QAAQ,IAAI;AACvC,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAFM,EAEJF,IAFI,CAECG,MAAM,IAAI;AACd,WAAOA,MAAP;AACH,GAJM,EAIJC,KAJI,CAIEC,GAAG,IAAI;AACZ,WAAOA,GAAP;AACH,GANM,CAAP;AAOH;AAED,OAAO,SAASC,gBAAT,GAA4B;AAC/B,QAAMhB,GAAG,GAAI,GAAEJ,SAAU,IAAGC,UAAW,cAAvC;AAEA,QAAMI,MAAM,GAAG;AAEXC,IAAAA,MAAM,EAAE,KAFG;AAGXI,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAHE;AAMXW,IAAAA,IAAI,EAAE;AANK,GAAf;AASA,SAAOR,KAAK,CAACT,GAAD,EAAMC,MAAN,CAAL,CAAmBS,IAAnB,CAAwBC,QAAQ,IAAI;AACvC,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAFM,EAEJF,IAFI,CAECG,MAAM,IAAI;AACd,WAAOA,MAAP;AACH,GAJM,EAIJC,KAJI,CAIEC,GAAG,IAAI;AACZ,WAAOA,GAAP;AACH,GANM,CAAP;AAOH;AAED,OAAO,SAASG,cAAT,CAAwBC,IAAxB,EAA8BC,MAA9B,EAAsC;AACzC,QAAMpB,GAAG,GAAI,GAAEJ,SAAU,IAAGC,UAAW,qBAAoBuB,MAAO,EAAlE;AAEA,QAAMnB,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,KADG;AAEXI,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFE;AAKXH,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAec,IAAf;AALK,GAAf;AAQA,SAAOV,KAAK,CAACT,GAAD,EAAMC,MAAN,CAAL,CAAmBS,IAAnB,CAAwBC,QAAQ,IAAI;AACvC,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAFM,EAEJF,IAFI,CAECG,MAAM,IAAI;AACd,WAAOA,MAAP;AACH,GAJM,EAIJC,KAJI,CAIEC,GAAG,IAAI;AACZ,WAAOA,GAAP;AACH,GANM,CAAP;AAOH;AAED,OAAO,SAASM,eAAT,CAAyBC,EAAzB,EAA6B;AAChC,QAAMtB,GAAG,GAAI,GAAEJ,SAAU,IAAGC,UAAW,qBAAoByB,EAAG,EAA9D;AAEA,QAAMrB,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,QADG;AAEXI,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AAFE,GAAf;AAOA,SAAOG,KAAK,CAACT,GAAD,EAAMC,MAAN,CAAL,CAAmBS,IAAnB,CAAwBC,QAAQ,IAAI;AACvC,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAFM,EAEJF,IAFI,CAECG,MAAM,IAAI;AACd,WAAOA,MAAP;AACH,GAJM,EAIJC,KAJI,CAIEC,GAAG,IAAI;AACZ,WAAOA,GAAP;AACH,GANM,CAAP;AAQH","sourcesContent":["import { BASE_PATH, apiVersion } from \"../config\";\n\nexport function agregarComestibleApi(data) {\n\n    const url = `${BASE_PATH}/${apiVersion}/agregar-comestible`;\n    const params = {\n\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n\n    };\n\n    console.log(data);\n\n    return fetch(url, params).then(response => {\n        return response.json()\n    }).then(result => {\n        return result;\n    }).catch(err => {\n        return err;\n    })\n}\n\nexport function getComestibleApi() {\n    const url = `${BASE_PATH}/${apiVersion}/comestibles`;\n\n    const params = {\n\n        method: \"GET\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        mode: \"cors\"\n    };\n\n    return fetch(url, params).then(response => {\n        return response.json()\n    }).then(result => {\n        return result;\n    }).catch(err => {\n        return err;\n    })\n}\n\nexport function updateComesApi(user, userId) {\n    const url = `${BASE_PATH}/${apiVersion}/updateComestible/${userId}`;\n\n    const params = {\n        method: \"PUT\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n    }\n\n    return fetch(url, params).then(response => {\n        return response.json();\n    }).then(result => {\n        return result;\n    }).catch(err => {\n        return err;\n    })\n}\n\nexport function deleteComesaApi(id) {\n    const url = `${BASE_PATH}/${apiVersion}/deleteComestible/${id}`;\n\n    const params = {\n        method: \"DELETE\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n    };\n\n    return fetch(url, params).then(response => {\n        return response.json();\n    }).then(result => {\n        return result;\n    }).catch(err => {\n        return err;\n    })\n\n}"]},"metadata":{},"sourceType":"module"}